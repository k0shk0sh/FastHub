apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'jacoco-android'
apply plugin: 'io.fabric'

buildProperties {
    notThere {
        file rootProject.file('debug_gradle.properties')
    }
    secrets {
        file rootProject.file('gradle.properties')
    }
}

android {
    signingConfigs {
        signing {
            keyAlias((buildProperties.secrets['android_key_alias'] | buildProperties.notThere['android_key_alias']).string)
            keyPassword((buildProperties.secrets['android_store_password'] | buildProperties.notThere['android_store_password']).string)
            storeFile file('fastaccess-public')
            storePassword((buildProperties.secrets['android_store_password'] | buildProperties.notThere['android_store_password']).string)
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.fastaccess.github"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 467
        versionName "4.6.7"
        buildConfigString "GITHUB_CLIENT_ID", (buildProperties.secrets['github_client_id'] | buildProperties.notThere['github_client_id']).string
        buildConfigString "GITHUB_SECRET", (buildProperties.secrets['github_secret'] | buildProperties.notThere['github_secret']).string
        buildConfigString "IMGUR_CLIENT_ID", (buildProperties.secrets['imgur_client_id'] | buildProperties.notThere['imgur_client_id']).string
        buildConfigString "IMGUR_SECRET", (buildProperties.secrets['imgur_secret'] | buildProperties.notThere['imgur_secret']).string
        buildConfigField "String", "REST_URL", '"https://api.github.com/"'
        buildConfigField "String", "IMGUR_URL", '"https://api.imgur.com/3/"'
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.signing
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            if (!rootProject.file('gradle.properties').exists()) {
                signingConfig signingConfigs.signing
            }
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            ext.alwaysUpdateBuildId = false
        }

    }

    sourceSets {
        main {
            res.srcDirs = [
                    "src/main/res/",
                    "src/main/res/layouts/main_layouts",
                    "src/main/res/layouts/row_layouts",
                    "src/main/res/layouts/other_layouts",
                    "src/main/res/translations",
                    "src/main/res"
            ]
        }
    }

    lintOptions {
        abortOnError false
        htmlReport true
        xmlReport true
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations {
        all*.exclude module: 'annotations'
    }

    packagingOptions { exclude 'META-INF/rxjava.properties' }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

kapt {
    generateStubs = true
}

repositories {
    maven { url "https://clojars.org/repo/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation(Libs.design)
    implementation(Libs.appcompat_v7)
    implementation(Libs.design)
    implementation(Libs.cardview_v7)
    implementation(Libs.recyclerview_v7)
    implementation(Libs.preference_v14)
    implementation(Libs.customtabs)
    implementation(Libs.palette_v7)
    implementation(Libs.thirtyinch)
    implementation(Libs.thirtyinch_rx2)
    implementation(Libs.retrofit)
    implementation(Libs.converter_gson)
    implementation(Libs.adapter_rxjava2)
    implementation(Libs.glide)
    implementation(Libs.shapedimageview)
    implementation(Libs.butterknife)
    implementation(Libs.bottom_navigation)
    implementation(Libs.rxjava)
    implementation(Libs.rxandroid)
    implementation(Libs.logging_interceptor)
    implementation(Libs.stream)
    implementation(Libs.toasty)
    implementation(Libs.retaineddatetimepickers)
    implementation(Libs.material_about_library)
    implementation(Libs.requery)
    implementation(Libs.requery_android)
    implementation(Libs.aboutlibraries + "@aar", { transitive = true })
    implementation(Libs.htmlspanner)
    implementation(Libs.htmlcleaner)
    implementation(Libs.shortbread)
    implementation(Libs.commonmark)
    implementation(Libs.commonmark_ext_autolink)
    implementation(Libs.commonmark_ext_gfm_strikethrough)
    implementation(Libs.commonmark_ext_gfm_tables)
    implementation(Libs.commonmark_ext_ins)
    implementation(Libs.commonmark_ext_yaml_front_matter)
    implementation(Libs.firebase_core)
    implementation(Libs.firebase_messaging)
    implementation(Libs.com_google_firebase_firebase_database)
    implementation(Libs.play_services_base)
    implementation(Libs.firebase_database_kotlin, { transitive = false })
    implementation(Libs.com_github_b3er_rxfirebase_firebase_database) { transitive = false }
    implementation(Libs.crashlytics + "@aar", { transitive = true })
    implementation(Libs.rxbillingservice)
    implementation(Libs.kotlin_stdlib_jdk7)
    implementation(Libs.jsoup)
    implementation(Libs.android_state)
    implementation(Libs.colorpicker_library)
    implementation(Libs.apollo_rx2_support)
    implementation(Libs.android_device_names)
    implementation(Libs.keyboardvisibilityevent)
    implementation(Libs.lottie)
    implementation(Libs.firebase_jobdispatcher)
    compileOnly(Libs.lombok)
    kapt(Libs.lombok)
    kapt(Libs.android_state_processor)
    kapt(Libs.butterknife_compiler)
    kapt(Libs.shortbread_compiler)
    kapt(Libs.requery_processor)
    testImplementation(Libs.junit)
    testImplementation(Libs.mockito_core)
    testImplementation(Libs.assertj_core)
    androidTestImplementation(Libs.support_annotations)
    androidTestImplementation(Libs.mockito_core)
    androidTestImplementation(Libs.com_android_support_test_runner)
    androidTestImplementation(Libs.com_android_support_test_rules)
    androidTestImplementation(Libs.espresso_intents)
    androidTestImplementation(Libs.espresso_core)
//    testImplementation "net.grandcentrix.thirtyinch:thirtyinch-test:$thirtyinchVersion"
}

apply plugin: 'com.google.gms.google-services'