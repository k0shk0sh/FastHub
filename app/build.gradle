apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'jacoco-android'
apply plugin: 'io.fabric'

buildProperties {
    notThere {
        file rootProject.file('debug_gradle.properties')
    }
    secrets {
        file rootProject.file('gradle.properties')
    }
}

android {
    signingConfigs {
        signing {
            keyAlias((buildProperties.secrets['android_key_alias'] | buildProperties.notThere['android_key_alias']).string)
            keyPassword((buildProperties.secrets['android_store_password'] | buildProperties.notThere['android_store_password']).string)
            storeFile file('fastaccess-public')
            storePassword((buildProperties.secrets['android_store_password'] | buildProperties.notThere['android_store_password']).string)
        }
    }
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.fastaccess.github"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 463
        versionName "4.6.3"
        buildConfigString "GITHUB_CLIENT_ID", (buildProperties.secrets['github_client_id'] | buildProperties.notThere['github_client_id']).string
        buildConfigString "GITHUB_SECRET", (buildProperties.secrets['github_secret'] | buildProperties.notThere['github_secret']).string
        buildConfigString "IMGUR_CLIENT_ID", (buildProperties.secrets['imgur_client_id'] | buildProperties.notThere['imgur_client_id']).string
        buildConfigString "IMGUR_SECRET", (buildProperties.secrets['imgur_secret'] | buildProperties.notThere['imgur_secret']).string
        buildConfigField "String", "REST_URL", '"https://api.github.com/"'
        buildConfigField "String", "IMGUR_URL", '"https://api.imgur.com/3/"'
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.signing
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            if (!rootProject.file('gradle.properties').exists()) {
                signingConfig signingConfigs.signing
            }
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            ext.alwaysUpdateBuildId = false
        }

    }

    sourceSets {
        main {
            res.srcDirs = [
                    "src/main/res/",
                    "src/main/res/layouts/main_layouts",
                    "src/main/res/layouts/row_layouts",
                    "src/main/res/layouts/other_layouts",
                    "src/main/res/translations",
                    "src/main/res"
            ]
        }
    }

    lintOptions {
        abortOnError false
        htmlReport true
        xmlReport true
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations {
        all*.exclude module: 'annotations'
    }

    packagingOptions { exclude 'META-INF/rxjava.properties' }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

kapt {
    generateStubs = true
}

repositories {
    maven { url "https://clojars.org/repo/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${supportVersion}"
    implementation "com.android.support:design:${supportVersion}"
    implementation "com.android.support:cardview-v7:${supportVersion}"
    implementation "com.android.support:recyclerview-v7:${supportVersion}"
    implementation "com.android.support:preference-v14:${supportVersion}"
    implementation "com.android.support:customtabs:${supportVersion}"
    implementation "com.android.support:palette-v7:${supportVersion}"
    implementation "net.grandcentrix.thirtyinch:thirtyinch:${thirtyinchVersion}"
    implementation "net.grandcentrix.thirtyinch:thirtyinch-rx2:${thirtyinchVersion}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit}"
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation 'cn.gavinliu.android.lib:ShapedImageView:0.8.3'
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"
    implementation 'it.sephiroth.android.library.bottomnavigation:bottom-navigation:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.annimon:stream:1.1.9'
    implementation 'com.github.GrenderG:Toasty:1.1.3'
    implementation 'com.github.k0shk0sh:RetainedDateTimePickers:1.0.2'
    implementation 'com.github.daniel-stoneuk:material-about-library:2.1.0'
    implementation "io.requery:requery:${requery}"
    implementation "io.requery:requery-android:${requery}"
    implementation('com.mikepenz:aboutlibraries:5.9.7@aar') { transitive = true }
    implementation 'com.github.nightwhistler:HtmlSpanner:0.4'
    implementation 'net.sourceforge.htmlcleaner:htmlcleaner:2.2'
    implementation 'com.github.matthiasrobbers:shortbread:1.0.1'
    implementation "com.atlassian.commonmark:commonmark:${commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-autolink:${commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:${commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-tables:${commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-ins:${commonmark}"
    implementation "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:${commonmark}"
    implementation "com.google.firebase:firebase-core:${gms}"
    implementation "com.google.firebase:firebase-messaging:${gms}"
    implementation "com.google.firebase:firebase-database:${gms}"
    implementation "com.google.android.gms:play-services-base:${gms}"
    implementation('com.github.b3er.rxfirebase:firebase-database-kotlin:11.2.0') { transitive = false }
    implementation('com.github.b3er.rxfirebase:firebase-database:11.2.0') { transitive = false }
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') { transitive = true }
    implementation "com.github.miguelbcr:RxBillingService:0.0.3"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${kotlin_version}"
    implementation 'org.jsoup:jsoup:1.10.3'
    implementation "com.evernote:android-state:${state_version}"
    implementation "petrov.kristiyan:colorpicker-library:1.1.4"
    implementation 'com.apollographql.apollo:apollo-rx2-support:0.4.1'
    implementation 'com.jaredrummler:android-device-names:1.1.5'
    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'
    implementation 'com.airbnb.android:lottie:2.2.5'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.2'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    kapt "org.projectlombok:lombok:${lombokVersion}"
    kapt "com.evernote:android-state-processor:${state_version}"
    kapt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    kapt 'com.github.matthiasrobbers:shortbread-compiler:1.0.1'
    kapt "org.projectlombok:lombok:${lombokVersion}"
    kapt "io.requery:requery-processor:${requery}"
//    testImplementation "net.grandcentrix.thirtyinch:thirtyinch-test:$thirtyinchVersion"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
    androidTestImplementation "com.android.support:support-annotations:${supportVersion}"
    androidTestImplementation "org.mockito:mockito-core:${mockitoVersion}"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${espresseVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${espresseVersion}"
}

apply plugin: 'com.google.gms.google-services'