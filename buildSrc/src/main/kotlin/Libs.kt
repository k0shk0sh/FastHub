import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [aapt2 website](https://developer.android.com/studio) */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * [aboutlibraries website](https://github.com/mikepenz/AboutLibraries) */
    const val aboutlibraries: String = "com.mikepenz:aboutlibraries:" + Versions.aboutlibraries

    /**
     * [adapter-rxjava2 website](https://github.com/square/retrofit/) */
    const val adapter_rxjava2: String =
            "com.squareup.retrofit2:adapter-rxjava2:" + Versions.adapter_rxjava2

    /**
     * [android-device-names website](https://github.com/jaredrummler/AndroidDeviceNames) */
    const val android_device_names: String =
            "com.jaredrummler:android-device-names:" + Versions.android_device_names

    /**
     * [android-state website](https://github.com/evernote/android-state) */
    const val android_state: String = "com.evernote:android-state:" + Versions.android_state

    /**
     * [android-state-processor website](https://github.com/evernote/android-state) */
    const val android_state_processor: String =
            "com.evernote:android-state-processor:" + Versions.android_state_processor

    /**
     * [apollo-runtime website](https://github.com/apollographql/apollo-android/) */
    const val apollo_runtime: String =
            "com.apollographql.apollo:apollo-runtime:" + Versions.apollo_runtime

    /**
     * [apollo-rx2-support website](https://github.com/apollographql/apollo-android/) */
    const val apollo_rx2_support: String =
            "com.apollographql.apollo:apollo-rx2-support:" + Versions.apollo_rx2_support

    /**
     * [appcompat-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val appcompat_v7: String = "com.android.support:appcompat-v7:" + Versions.appcompat_v7

    /**
     * [assertj-core website](http://assertj.org) */
    const val assertj_core: String = "org.assertj:assertj-core:" + Versions.assertj_core

    /**
     * [bottom-navigation website](https://github.com/sephiroth74/Material-BottomNavigation) */
    const val bottom_navigation: String =
            "it.sephiroth.android.library.bottomnavigation:bottom-navigation:" + Versions.bottom_navigation

    /**
     * [butterknife website](https://github.com/JakeWharton/butterknife/) */
    const val butterknife: String = "com.jakewharton:butterknife:" + Versions.butterknife

    /**
     * [butterknife-compiler website](https://github.com/JakeWharton/butterknife/) */
    const val butterknife_compiler: String =
            "com.jakewharton:butterknife-compiler:" + Versions.butterknife_compiler

    /**
     * [cardview-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val cardview_v7: String = "com.android.support:cardview-v7:" + Versions.cardview_v7

    /**
     * [colorpicker-library website](https://github.com/kristiyanP/colorpicker) */
    const val colorpicker_library: String =
            "petrov.kristiyan:colorpicker-library:" + Versions.colorpicker_library

    /**
     * [rules website](https://developer.android.com/testing) */
    const val com_android_support_test_rules: String =
            "com.android.support.test:rules:" + Versions.com_android_support_test_rules

    /**
     * [runner website](https://developer.android.com/testing) */
    const val com_android_support_test_runner: String =
            "com.android.support.test:runner:" + Versions.com_android_support_test_runner

    /**
     * [gradle website](https://developer.android.com/studio) */
    const val com_android_tools_build_gradle: String =
            "com.android.tools.build:gradle:" + Versions.com_android_tools_build_gradle

    /**
     * [firebase-database website](https://github.com/b3er/RxFirebase2) */
    const val com_github_b3er_rxfirebase_firebase_database: String =
            "com.github.b3er.rxfirebase:firebase-database:" + Versions.com_github_b3er_rxfirebase_firebase_database

    const val com_google_firebase_firebase_database: String =
            "com.google.firebase:firebase-database:" + Versions.com_google_firebase_firebase_database

    /**
     * [commonmark website](https://github.com/atlassian/commonmark-java) */
    const val commonmark: String = "com.atlassian.commonmark:commonmark:" + Versions.commonmark

    /**
     * [commonmark-ext-autolink website](https://github.com/atlassian/commonmark-java) */
    const val commonmark_ext_autolink: String =
            "com.atlassian.commonmark:commonmark-ext-autolink:" + Versions.commonmark_ext_autolink

    /**
     * [commonmark-ext-gfm-strikethrough website](https://github.com/atlassian/commonmark-java) */
    const val commonmark_ext_gfm_strikethrough: String =
            "com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:" + Versions.commonmark_ext_gfm_strikethrough

    /**
     * [commonmark-ext-gfm-tables website](https://github.com/atlassian/commonmark-java) */
    const val commonmark_ext_gfm_tables: String =
            "com.atlassian.commonmark:commonmark-ext-gfm-tables:" + Versions.commonmark_ext_gfm_tables

    /**
     * [commonmark-ext-ins website](https://github.com/atlassian/commonmark-java) */
    const val commonmark_ext_ins: String =
            "com.atlassian.commonmark:commonmark-ext-ins:" + Versions.commonmark_ext_ins

    /**
     * [commonmark-ext-yaml-front-matter website](https://github.com/atlassian/commonmark-java) */
    const val commonmark_ext_yaml_front_matter: String =
            "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:" + Versions.commonmark_ext_yaml_front_matter

    /**
     * [converter-gson website](https://github.com/square/retrofit/) */
    const val converter_gson: String =
            "com.squareup.retrofit2:converter-gson:" + Versions.converter_gson

    const val crashlytics: String =
            "com.crashlytics.sdk.android:crashlytics:" + Versions.crashlytics

    /**
     * [customtabs website](http://developer.android.com/tools/extras/support-library.html) */
    const val customtabs: String = "com.android.support:customtabs:" + Versions.customtabs

    /**
     * [design website](http://developer.android.com/tools/extras/support-library.html) */
    const val design: String = "com.android.support:design:" + Versions.design

    /**
     * [espresso-core website](https://developer.android.com/testing) */
    const val espresso_core: String =
            "com.android.support.test.espresso:espresso-core:" + Versions.espresso_core

    /**
     * [espresso-intents website](https://developer.android.com/testing) */
    const val espresso_intents: String =
            "com.android.support.test.espresso:espresso-intents:" + Versions.espresso_intents

    const val firebase_core: String = "com.google.firebase:firebase-core:" + Versions.firebase_core

    /**
     * [firebase-database-kotlin website](https://github.com/b3er/RxFirebase2) */
    const val firebase_database_kotlin: String =
            "com.github.b3er.rxfirebase:firebase-database-kotlin:" + Versions.firebase_database_kotlin

    const val firebase_jobdispatcher: String =
            "com.firebase:firebase-jobdispatcher:" + Versions.firebase_jobdispatcher

    const val firebase_messaging: String =
            "com.google.firebase:firebase-messaging:" + Versions.firebase_messaging

    /**
     * [glide website](https://github.com/bumptech/glide) */
    const val glide: String = "com.github.bumptech.glide:glide:" + Versions.glide

    /**
     * [google-services website](http://tools.android.com/) */
    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    const val gradle_build_properties_plugin: String =
            "com.novoda:gradle-build-properties-plugin:" + Versions.gradle_build_properties_plugin

    /**
     * [gradle-plugin website](https://github.com/apollographql/apollo-android/) */
    const val gradle_plugin: String =
            "com.apollographql.apollo:gradle-plugin:" + Versions.gradle_plugin

    /**
     * [htmlcleaner website](http://htmlcleaner.sourceforge.net/) */
    const val htmlcleaner: String =
            "net.sourceforge.htmlcleaner:htmlcleaner:" + Versions.htmlcleaner

    /**
     * [HtmlSpanner website](http://maven.apache.org) */
    const val htmlspanner: String = "com.github.nightwhistler:HtmlSpanner:" + Versions.htmlspanner

    const val io_fabric_tools_gradle: String =
            "io.fabric.tools:gradle:" + Versions.io_fabric_tools_gradle

    const val jacoco_android: String =
            "com.dicedmelon.gradle:jacoco-android:" + Versions.jacoco_android

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [jsoup website](https://jsoup.org/) */
    const val jsoup: String = "org.jsoup:jsoup:" + Versions.jsoup

    /**
     * [junit website](http://junit.org) */
    const val junit: String = "junit:junit:" + Versions.junit

    const val keyboardvisibilityevent: String =
            "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:" + Versions.keyboardvisibilityevent

    /**
     * [kotlin-annotation-processing-gradle website](https://kotlinlang.org/) */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.kotlin_annotation_processing_gradle

    /**
     * [kotlin-gradle-plugin website](https://kotlinlang.org/) */
    const val kotlin_gradle_plugin: String =
            "org.jetbrains.kotlin:kotlin-gradle-plugin:" + Versions.kotlin_gradle_plugin

    /**
     * [kotlin-stdlib-jdk7 website](https://kotlinlang.org/) */
    const val kotlin_stdlib_jdk7: String =
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" + Versions.kotlin_stdlib_jdk7

    /**
     * [lint-gradle website](https://developer.android.com/studio) */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * [logging-interceptor website](https://github.com/square/okhttp) */
    const val logging_interceptor: String =
            "com.squareup.okhttp3:logging-interceptor:" + Versions.logging_interceptor

    /**
     * [lombok website](https://projectlombok.org) */
    const val lombok: String = "org.projectlombok:lombok:" + Versions.lombok

    /**
     * [lottie website](https://github.com/airbnb/lottie-android) */
    const val lottie: String = "com.airbnb.android:lottie:" + Versions.lottie

    /**
     * [material-about-library website](https://github.com/daniel-stoneuk/material-about-library) */
    const val material_about_library: String =
            "com.github.daniel-stoneuk:material-about-library:" + Versions.material_about_library

    /**
     * [mockito-core website](https://github.com/mockito/mockito) */
    const val mockito_core: String = "org.mockito:mockito-core:" + Versions.mockito_core

    /**
     * [org.jacoco.agent website](http://jacoco.org) */
    const val org_jacoco_agent: String = "org.jacoco:org.jacoco.agent:" + Versions.org_jacoco_agent

    /**
     * [org.jacoco.ant website](http://jacoco.org) */
    const val org_jacoco_ant: String = "org.jacoco:org.jacoco.ant:" + Versions.org_jacoco_ant

    /**
     * [palette-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val palette_v7: String = "com.android.support:palette-v7:" + Versions.palette_v7

    const val play_services_base: String =
            "com.google.android.gms:play-services-base:" + Versions.play_services_base

    /**
     * [preference-v14 website](http://developer.android.com/tools/extras/support-library.html) */
    const val preference_v14: String =
            "com.android.support:preference-v14:" + Versions.preference_v14

    /**
     * [recyclerview-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val recyclerview_v7: String =
            "com.android.support:recyclerview-v7:" + Versions.recyclerview_v7

    /**
     * [requery website](https://github.com/requery/requery) */
    const val requery: String = "io.requery:requery:" + Versions.requery

    /**
     * [requery-android website](https://github.com/requery/requery) */
    const val requery_android: String = "io.requery:requery-android:" + Versions.requery_android

    /**
     * [requery-processor website](https://github.com/requery/requery) */
    const val requery_processor: String =
            "io.requery:requery-processor:" + Versions.requery_processor

    /**
     * [RetainedDateTimePickers website](https://github.com/k0shk0sh/RetainedDateTimePickers) */
    const val retaineddatetimepickers: String =
            "com.github.k0shk0sh:RetainedDateTimePickers:" + Versions.retaineddatetimepickers

    /**
     * [retrofit website](https://github.com/square/retrofit/) */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" + Versions.retrofit

    /**
     * [rxandroid website](https://github.com/ReactiveX/RxAndroid) */
    const val rxandroid: String = "io.reactivex.rxjava2:rxandroid:" + Versions.rxandroid

    /**
     * [RxBillingService website](https://github.com/miguelbcr/RxBillingService) */
    const val rxbillingservice: String =
            "com.github.miguelbcr:RxBillingService:" + Versions.rxbillingservice

    /**
     * [rxjava website](https://github.com/ReactiveX/RxJava) */
    const val rxjava: String = "io.reactivex.rxjava2:rxjava:" + Versions.rxjava

    /**
     * [ShapedImageView website](https://github.com/gavinliu/ShapedImageView) */
    const val shapedimageview: String =
            "cn.gavinliu.android.lib:ShapedImageView:" + Versions.shapedimageview

    /**
     * [shortbread website](https://github.com/matthiasrobbers/shortbread) */
    const val shortbread: String = "com.github.matthiasrobbers:shortbread:" + Versions.shortbread

    /**
     * [shortbread-compiler website](https://github.com/matthiasrobbers/shortbread) */
    const val shortbread_compiler: String =
            "com.github.matthiasrobbers:shortbread-compiler:" + Versions.shortbread_compiler

    /**
     * [stream website](https://github.com/aNNiMON/Lightweight-Stream-API) */
    const val stream: String = "com.annimon:stream:" + Versions.stream

    /**
     * [support-annotations website](http://developer.android.com/tools/extras/support-library.html) */
    const val support_annotations: String =
            "com.android.support:support-annotations:" + Versions.support_annotations

    const val thirtyinch: String = "net.grandcentrix.thirtyinch:thirtyinch:" + Versions.thirtyinch

    const val thirtyinch_rx2: String =
            "net.grandcentrix.thirtyinch:thirtyinch-rx2:" + Versions.thirtyinch_rx2

    /**
     * [Toasty website](https://github.com/GrenderG/Toasty) */
    const val toasty: String = "com.github.GrenderG:Toasty:" + Versions.toasty
}
